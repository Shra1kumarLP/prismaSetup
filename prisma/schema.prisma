// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model employees {
  id              String             @id @default(uuid())
  name            String             @db.VarChar(50)
  mob_number      String             @db.VarChar(50)
  category        String             @db.VarChar(50)
  payment_date    DateTime           @default(now())
  salary          salary_management?
  attendence      attendances[]
  bank_details_id bank_details?
  join_date       DateTime           @default(now())
  position        String             @db.VarChar(50)
  address_line_1  String             @db.VarChar(50)
  address_line_2  String             @db.VarChar(50)
  pincode         String             @db.VarChar(50)
  dob             DateTime           @default(now())
  email_id        String             @unique
  status          String             @db.VarChar(50)
  company_id      String             @default(uuid())
  company         companies          @relation(fields: [company_id], references: [id])
  created_by      String             @default(uuid())
  modified_by     String             @default(uuid())
  created_at      DateTime           @default(now())
  updated_at      DateTime           @default(now())
}

model users {
  id          String     @id @default(uuid())
  name        String     @db.VarChar(50)
  mob_number  String     @db.VarChar(50)
  email_id    String     @db.VarChar(50)
  language_id languages?
  company_id  String     @default(uuid())
  created_at  DateTime   @default(now())
  updated_at  DateTime   @default(now())
}

model companies {
  id              String      @id @default(uuid())
  name            String      @db.VarChar(50)
  employees       employees[]
  category        String      @db.VarChar(50)
  owner_name      String      @db.VarChar(50)
  est_date        DateTime    @default(now())
  address_line_1  String      @db.VarChar(50)
  address_line_2  String      @db.VarChar(50)
  pincode         String      @db.VarChar(50)
  status          String      @db.VarChar(50)
  no_of_employees String      @default(uuid())
  email_id        String      @unique
  created_by      String      @default(uuid())
  modified_by     String      @default(uuid())
  created_at      DateTime    @default(now())
  updated_at      DateTime    @default(now())
}

model salary_management {
  id          String              @id @default(uuid())
  employee    employees           @relation(fields: [employee_id], references: [id])
  employee_id String              @unique @default(uuid())
  category    String              @db.VarChar(50)
  salary      Int
  status      String              @db.VarChar(50)
  additions   salary_additions[]
  deductions  salary_deductions[]
  created_by  String              @default(uuid())
  modified_by String              @default(uuid())
  created_at  DateTime            @default(now())
  updated_at  DateTime            @default(now())
}

model attendances {
  id          String    @id @default(uuid())
  employee_id String    @default(uuid())
  date        DateTime  @default(now())
  status      String    @db.VarChar(50)
  employee    employees @relation(fields: [employee_id], references: [id])
  created_by  String    @default(uuid())
  modified_by String    @default(uuid())
  created_at  DateTime  @default(now())
  updated_at  DateTime  @default(now())
}

model bank_details {
  id          String    @default(uuid())
  employee_id String    @unique @default(uuid())
  employee    employees @relation(fields: [employee_id], references: [id])
  acc_number  Int
  bank_name   String    @db.VarChar(50)
  branch_id   String    @db.VarChar(50)
  ifsc_code   String    @db.VarChar(50)
  status      String    @db.VarChar(50)
  created_by  String    @default(uuid())
  modified_by String    @default(uuid())
  created_at  DateTime  @default(now())
  updated_at  DateTime  @default(now())
}

model banks {
  id          String   @id @default(uuid())
  name        String   @db.VarChar(50)
  status      String   @db.VarChar(50)
  created_by  String   @default(uuid())
  modified_by String   @default(uuid())
  created_at  DateTime @default(now())
  updated_at  DateTime @default(now())
}

model salary_additions {
  id              String            @id @default(uuid())
  salary_id       String            @default(uuid())
  salary          salary_management @relation(fields: [salary_id], references: [id])
  date            DateTime          @db.Date
  addition_reason String            @db.VarChar(50)
  amount          Int
  created_by      String            @default(uuid())
  modified_by     String            @default(uuid())
  created_at      DateTime          @default(now())
  updated_at      DateTime          @default(now())
}

model salary_deductions {
  id               String            @id @default(uuid())
  salary_id        String            @default(uuid())
  salary           salary_management @relation(fields: [salary_id], references: [id])
  date             DateTime          @default(now())
  deduction_reason String            @db.VarChar(50)
  amount           Int
  created_by       String            @default(uuid())
  modified_by      String            @default(uuid())
  created_at       DateTime          @default(now())
  updated_at       DateTime          @default(now())
}

model languages {
  id         String   @id @default(uuid())
  user       users    @relation(fields: [user_id], references: [id])
  user_id    String   @unique @default(uuid())
  name       String   @db.VarChar(50)
  code       String   @db.VarChar(50)
  created_at DateTime @default(now())
  updated_at DateTime @default(now())
}
